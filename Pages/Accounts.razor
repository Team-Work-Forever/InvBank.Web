@page "/"
@using InvBank.Web.Contracts.Account
@inject AccountEndPoint accountEndPoint
@inject NavigationManager navigationManager
@attribute [Authorize()]

<PageTitle>Contas</PageTitle>

<h1>Gerir Contas</h1>

<table class="table table.sprited table-bordered table-hover">
  <thead>
	<th>Iban</th>
	<th>Nome do Banco</th>
	<th></th>
  </thead>
  <tbody>
		@if (userAccounts.Count() > 0)
		{ @foreach (var user in userAccounts)
			{
			<tr @onclick="() => GoToAccount(user.iban)">
			  <td>@user.iban</td>
			  <td>@user.Bank</td>
			  <td>
				<button class="btn btn-primary" @onclick="UpdateAccount">
				  <i class="bi bi-pencil"></i>
				</button>
				<button class="btn btn-danger" @onclick="DeleteAccount">
				  <i class="bi bi-trash3-fill"></i>
				</button>
			  </td>
			</tr>
			} }
		else
		{
		<tr>
		  <td colspan="3" align="center">Nenhuma conta registada!</td>
		</tr>
		}
  </tbody>
</table>

@code {

	protected List<AccountResponse> userAccounts = new();
		
	protected override async Task OnInitializedAsync()
	{
		var result = await accountEndPoint.GetAllAccount();

		if (result.IsError)
		{
			return;
		}

		userAccounts = result.Value.ToList();

	}

	protected void GoToAccount(string iban) { navigationManager.NavigateTo($"/account/{iban}"); }
	protected void UpdateAccount() { navigationManager.NavigateTo("/accounts"); }
	protected void DeleteAccount() { navigationManager.NavigateTo("/accounts"); }

} 
