@page "/createinvfund"
@using InvBank.Models
@inject NavigationManager navigationManager

<PageTitle>Registar Fundo de Investimento</PageTitle>

<h1>Registar Fundo de Investimento</h1>

<div class="row">
  <div class="col">
    <EditForm Model="@InvFundActive" OnSubmit="Register">
        <DataAnnotationsValidator/>

            @if (validationErrors.Any())
            {
                    <div class="alert alert-danger">
                        <ul>
                        @foreach (var error in validationErrors)
                        {
                                    <li>@error</li>
                        }
                        </ul>
                    </div>
            }

        <div class="mb-3">
            <label for="name" class="form-label">Nome:</label>
            <InputText id=name @bind-Value=InvFundActive.Name class="form-control"></InputText>
            <ValidationMessage For="@(() => InvFundActive.Name)" />
        </div>     
        <div class="mb-3">
            <label for="initial_date" class="form-label">Data Inicial:</label>
            <InputDate id=initial_date @bind-Value=InvFundActive.InitialDate class="form-control"></InputDate>
        </div>     
        <div class="mb-3">
            <label for="duration" class="form-label">Duração:</label>
            <InputNumber id=duration @bind-Value=InvFundActive.Duration class="form-control"></InputNumber>
        </div>     
        <div class="mb-3">
            <label for="tax_percent" class="form-label">Taxa:</label>
            <InputNumber id=tax_percent @bind-Value=InvFundActive.TaxPercent class="form-control"></InputNumber>
        </div>     
        <div class="mb-3">
            <label for="value" class="form-label">Valor:</label>
            <InputNumber id=value @bind-Value=InvFundActive.Value class="form-control"></InputNumber>
        </div>       
        <div class="mb-3">
            <label for="account" class="form-label">Conta:</label>
            <InputSelect id=account.Iban @bind-Value=InvFundActive.Account class="form-select">
                    @if (Accounts.Count() > 0)
                    {
                        <option value="">Selecionar Conta</option>
                        @foreach (var account in Accounts)
                        {
                                <option>@account.Iban</option>
                        }
                    }
                    else
                    {
                        <option value="">Selecionar Conta</option>
                    }
            </InputSelect>
        </div> 
        <button href="/actives" type="submit" class="btn btn-primary">Registar</button>    
        <a href="/actives" class="btn btn-secondary">Cancelar</a>
    </EditForm>
  </div>
</div>

@code {

    public ActivesInvestmentFund InvFundActive { get; set; } = new ActivesInvestmentFund();

    private List<string> validationErrors = new List<string>();

    public IEnumerable<Account> Accounts { get; set; }

    public void InitializeAccounts()
    {
        var A1 = new Account
        {
            Iban = "637494294",
            BankName = "Inv",
            AccountBank = "875753943"
        };

        Accounts = new List<Account> { A1 };
    }

    protected async override void OnInitialized()
    {
        InitializeAccounts();
    }

    private void Register()
    {
        validationErrors.Clear();

        var validationResults = InvFundActive.Validate();
        if (validationResults.Any())
        {
            validationErrors.AddRange(validationResults.Select(result => result.ErrorMessage));
        }
        else
        {
            // ActivesService.AddDepositActive(InvFundActive);
            navigationManager.NavigateTo("/actives");
        }
    }

}